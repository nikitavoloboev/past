/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppEarnImport } from './routes/app/earn'
import { Route as AppClaimImport } from './routes/app/claim'
import { Route as AdminNewAirdropForClaimImport } from './routes/admin/new-airdrop-for-claim'
import { Route as AppAirdropsIndexImport } from './routes/app/airdrops/index'
import { Route as AppAirdropsAirdropIdImport } from './routes/app/airdrops/$airdropId'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppEarnRoute = AppEarnImport.update({
  path: '/earn',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppClaimRoute = AppClaimImport.update({
  path: '/claim',
  getParentRoute: () => AppRouteRoute,
} as any)

const AdminNewAirdropForClaimRoute = AdminNewAirdropForClaimImport.update({
  path: '/new-airdrop-for-claim',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AppAirdropsIndexRoute = AppAirdropsIndexImport.update({
  path: '/airdrops/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAirdropsAirdropIdRoute = AppAirdropsAirdropIdImport.update({
  path: '/airdrops/$airdropId',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/new-airdrop-for-claim': {
      id: '/admin/new-airdrop-for-claim'
      path: '/new-airdrop-for-claim'
      fullPath: '/admin/new-airdrop-for-claim'
      preLoaderRoute: typeof AdminNewAirdropForClaimImport
      parentRoute: typeof AdminRouteImport
    }
    '/app/claim': {
      id: '/app/claim'
      path: '/claim'
      fullPath: '/app/claim'
      preLoaderRoute: typeof AppClaimImport
      parentRoute: typeof AppRouteImport
    }
    '/app/earn': {
      id: '/app/earn'
      path: '/earn'
      fullPath: '/app/earn'
      preLoaderRoute: typeof AppEarnImport
      parentRoute: typeof AppRouteImport
    }
    '/app/airdrops/$airdropId': {
      id: '/app/airdrops/$airdropId'
      path: '/airdrops/$airdropId'
      fullPath: '/app/airdrops/$airdropId'
      preLoaderRoute: typeof AppAirdropsAirdropIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/airdrops/': {
      id: '/app/airdrops/'
      path: '/airdrops'
      fullPath: '/app/airdrops'
      preLoaderRoute: typeof AppAirdropsIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminNewAirdropForClaimRoute: typeof AdminNewAirdropForClaimRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminNewAirdropForClaimRoute: AdminNewAirdropForClaimRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppClaimRoute: typeof AppClaimRoute
  AppEarnRoute: typeof AppEarnRoute
  AppAirdropsAirdropIdRoute: typeof AppAirdropsAirdropIdRoute
  AppAirdropsIndexRoute: typeof AppAirdropsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppClaimRoute: AppClaimRoute,
  AppEarnRoute: AppEarnRoute,
  AppAirdropsAirdropIdRoute: AppAirdropsAirdropIdRoute,
  AppAirdropsIndexRoute: AppAirdropsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/admin/new-airdrop-for-claim': typeof AdminNewAirdropForClaimRoute
  '/app/claim': typeof AppClaimRoute
  '/app/earn': typeof AppEarnRoute
  '/app/airdrops/$airdropId': typeof AppAirdropsAirdropIdRoute
  '/app/airdrops': typeof AppAirdropsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/admin/new-airdrop-for-claim': typeof AdminNewAirdropForClaimRoute
  '/app/claim': typeof AppClaimRoute
  '/app/earn': typeof AppEarnRoute
  '/app/airdrops/$airdropId': typeof AppAirdropsAirdropIdRoute
  '/app/airdrops': typeof AppAirdropsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/admin/new-airdrop-for-claim': typeof AdminNewAirdropForClaimRoute
  '/app/claim': typeof AppClaimRoute
  '/app/earn': typeof AppEarnRoute
  '/app/airdrops/$airdropId': typeof AppAirdropsAirdropIdRoute
  '/app/airdrops/': typeof AppAirdropsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/app'
    | '/admin/new-airdrop-for-claim'
    | '/app/claim'
    | '/app/earn'
    | '/app/airdrops/$airdropId'
    | '/app/airdrops'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/app'
    | '/admin/new-airdrop-for-claim'
    | '/app/claim'
    | '/app/earn'
    | '/app/airdrops/$airdropId'
    | '/app/airdrops'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/app'
    | '/admin/new-airdrop-for-claim'
    | '/app/claim'
    | '/app/earn'
    | '/app/airdrops/$airdropId'
    | '/app/airdrops/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/new-airdrop-for-claim"
      ]
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/claim",
        "/app/earn",
        "/app/airdrops/$airdropId",
        "/app/airdrops/"
      ]
    },
    "/admin/new-airdrop-for-claim": {
      "filePath": "admin/new-airdrop-for-claim.tsx",
      "parent": "/admin"
    },
    "/app/claim": {
      "filePath": "app/claim.tsx",
      "parent": "/app"
    },
    "/app/earn": {
      "filePath": "app/earn.tsx",
      "parent": "/app"
    },
    "/app/airdrops/$airdropId": {
      "filePath": "app/airdrops/$airdropId.tsx",
      "parent": "/app"
    },
    "/app/airdrops/": {
      "filePath": "app/airdrops/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
