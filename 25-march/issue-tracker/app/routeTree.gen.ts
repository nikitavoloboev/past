/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as AppmainRouteImport } from './routes/_app/(main)/route'
import { Route as AppmainIndexImport } from './routes/_app/(main)/index'
import { Route as AppmainSettingsImport } from './routes/_app/(main)/settings'
import { Route as AppmainProfileImport } from './routes/_app/(main)/profile'
import { Route as AppmainTeamsIndexImport } from './routes/_app/(main)/teams/index'
import { Route as AppmainTeamsTeamIdIndexImport } from './routes/_app/(main)/teams/$teamId/index'
import { Route as AppmainTeamsTeamIdProjectsIndexImport } from './routes/_app/(main)/teams/$teamId/projects/index'
import { Route as AppmainTeamsTeamIdProjectsProjectIdIndexImport } from './routes/_app/(main)/teams/$teamId/projects/$projectId/index'
import { Route as AppmainTeamsTeamIdProjectsProjectIdIssuesIndexImport } from './routes/_app/(main)/teams/$teamId/projects/$projectId/issues/index'
import { Route as AppmainTeamsTeamIdProjectsProjectIdIssuesNewImport } from './routes/_app/(main)/teams/$teamId/projects/$projectId/issues/new'
import { Route as AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexImport } from './routes/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/index'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRoute,
} as any)

const AppmainRouteRoute = AppmainRouteImport.update({
  id: '/(main)',
  getParentRoute: () => AppRoute,
} as any)

const AppmainIndexRoute = AppmainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppmainRouteRoute,
} as any)

const AppmainSettingsRoute = AppmainSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppmainRouteRoute,
} as any)

const AppmainProfileRoute = AppmainProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppmainRouteRoute,
} as any)

const AppmainTeamsIndexRoute = AppmainTeamsIndexImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => AppmainRouteRoute,
} as any)

const AppmainTeamsTeamIdIndexRoute = AppmainTeamsTeamIdIndexImport.update({
  id: '/teams/$teamId/',
  path: '/teams/$teamId/',
  getParentRoute: () => AppmainRouteRoute,
} as any)

const AppmainTeamsTeamIdProjectsIndexRoute =
  AppmainTeamsTeamIdProjectsIndexImport.update({
    id: '/teams/$teamId/projects/',
    path: '/teams/$teamId/projects/',
    getParentRoute: () => AppmainRouteRoute,
  } as any)

const AppmainTeamsTeamIdProjectsProjectIdIndexRoute =
  AppmainTeamsTeamIdProjectsProjectIdIndexImport.update({
    id: '/teams/$teamId/projects/$projectId/',
    path: '/teams/$teamId/projects/$projectId/',
    getParentRoute: () => AppmainRouteRoute,
  } as any)

const AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute =
  AppmainTeamsTeamIdProjectsProjectIdIssuesIndexImport.update({
    id: '/teams/$teamId/projects/$projectId/issues/',
    path: '/teams/$teamId/projects/$projectId/issues/',
    getParentRoute: () => AppmainRouteRoute,
  } as any)

const AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute =
  AppmainTeamsTeamIdProjectsProjectIdIssuesNewImport.update({
    id: '/teams/$teamId/projects/$projectId/issues/new',
    path: '/teams/$teamId/projects/$projectId/issues/new',
    getParentRoute: () => AppmainRouteRoute,
  } as any)

const AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute =
  AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexImport.update({
    id: '/teams/$teamId/projects/$projectId/issues/$issueId/',
    path: '/teams/$teamId/projects/$projectId/issues/$issueId/',
    getParentRoute: () => AppmainRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/(main)': {
      id: '/_app/(main)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppmainRouteImport
      parentRoute: typeof AppImport
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppImport
    }
    '/_app/(main)/profile': {
      id: '/_app/(main)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppmainProfileImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/settings': {
      id: '/_app/(main)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppmainSettingsImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/': {
      id: '/_app/(main)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppmainIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/': {
      id: '/_app/(main)/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AppmainTeamsIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/': {
      id: '/_app/(main)/teams/$teamId/'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof AppmainTeamsTeamIdIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/projects/': {
      id: '/_app/(main)/teams/$teamId/projects/'
      path: '/teams/$teamId/projects'
      fullPath: '/teams/$teamId/projects'
      preLoaderRoute: typeof AppmainTeamsTeamIdProjectsIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/projects/$projectId/': {
      id: '/_app/(main)/teams/$teamId/projects/$projectId/'
      path: '/teams/$teamId/projects/$projectId'
      fullPath: '/teams/$teamId/projects/$projectId'
      preLoaderRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/projects/$projectId/issues/new': {
      id: '/_app/(main)/teams/$teamId/projects/$projectId/issues/new'
      path: '/teams/$teamId/projects/$projectId/issues/new'
      fullPath: '/teams/$teamId/projects/$projectId/issues/new'
      preLoaderRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesNewImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/projects/$projectId/issues/': {
      id: '/_app/(main)/teams/$teamId/projects/$projectId/issues/'
      path: '/teams/$teamId/projects/$projectId/issues'
      fullPath: '/teams/$teamId/projects/$projectId/issues'
      preLoaderRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIndexImport
      parentRoute: typeof AppmainRouteImport
    }
    '/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/': {
      id: '/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/'
      path: '/teams/$teamId/projects/$projectId/issues/$issueId'
      fullPath: '/teams/$teamId/projects/$projectId/issues/$issueId'
      preLoaderRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexImport
      parentRoute: typeof AppmainRouteImport
    }
  }
}

// Create and export the route tree

interface AppmainRouteRouteChildren {
  AppmainProfileRoute: typeof AppmainProfileRoute
  AppmainSettingsRoute: typeof AppmainSettingsRoute
  AppmainIndexRoute: typeof AppmainIndexRoute
  AppmainTeamsIndexRoute: typeof AppmainTeamsIndexRoute
  AppmainTeamsTeamIdIndexRoute: typeof AppmainTeamsTeamIdIndexRoute
  AppmainTeamsTeamIdProjectsIndexRoute: typeof AppmainTeamsTeamIdProjectsIndexRoute
  AppmainTeamsTeamIdProjectsProjectIdIndexRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIndexRoute
  AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute
  AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute
  AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute: typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute
}

const AppmainRouteRouteChildren: AppmainRouteRouteChildren = {
  AppmainProfileRoute: AppmainProfileRoute,
  AppmainSettingsRoute: AppmainSettingsRoute,
  AppmainIndexRoute: AppmainIndexRoute,
  AppmainTeamsIndexRoute: AppmainTeamsIndexRoute,
  AppmainTeamsTeamIdIndexRoute: AppmainTeamsTeamIdIndexRoute,
  AppmainTeamsTeamIdProjectsIndexRoute: AppmainTeamsTeamIdProjectsIndexRoute,
  AppmainTeamsTeamIdProjectsProjectIdIndexRoute:
    AppmainTeamsTeamIdProjectsProjectIdIndexRoute,
  AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute:
    AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute,
  AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute:
    AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute,
  AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute:
    AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute,
}

const AppmainRouteRouteWithChildren = AppmainRouteRoute._addFileChildren(
  AppmainRouteRouteChildren,
)

interface AppRouteChildren {
  AppmainRouteRoute: typeof AppmainRouteRouteWithChildren
  AppAboutRoute: typeof AppAboutRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppmainRouteRoute: AppmainRouteRouteWithChildren,
  AppAboutRoute: AppAboutRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/': typeof AppmainIndexRoute
  '/about': typeof AppAboutRoute
  '/profile': typeof AppmainProfileRoute
  '/settings': typeof AppmainSettingsRoute
  '/teams': typeof AppmainTeamsIndexRoute
  '/teams/$teamId': typeof AppmainTeamsTeamIdIndexRoute
  '/teams/$teamId/projects': typeof AppmainTeamsTeamIdProjectsIndexRoute
  '/teams/$teamId/projects/$projectId': typeof AppmainTeamsTeamIdProjectsProjectIdIndexRoute
  '/teams/$teamId/projects/$projectId/issues/new': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute
  '/teams/$teamId/projects/$projectId/issues': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute
  '/teams/$teamId/projects/$projectId/issues/$issueId': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AppAboutRoute
  '/profile': typeof AppmainProfileRoute
  '/settings': typeof AppmainSettingsRoute
  '/': typeof AppmainIndexRoute
  '/teams': typeof AppmainTeamsIndexRoute
  '/teams/$teamId': typeof AppmainTeamsTeamIdIndexRoute
  '/teams/$teamId/projects': typeof AppmainTeamsTeamIdProjectsIndexRoute
  '/teams/$teamId/projects/$projectId': typeof AppmainTeamsTeamIdProjectsProjectIdIndexRoute
  '/teams/$teamId/projects/$projectId/issues/new': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute
  '/teams/$teamId/projects/$projectId/issues': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute
  '/teams/$teamId/projects/$projectId/issues/$issueId': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/(main)': typeof AppmainRouteRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/(main)/profile': typeof AppmainProfileRoute
  '/_app/(main)/settings': typeof AppmainSettingsRoute
  '/_app/(main)/': typeof AppmainIndexRoute
  '/_app/(main)/teams/': typeof AppmainTeamsIndexRoute
  '/_app/(main)/teams/$teamId/': typeof AppmainTeamsTeamIdIndexRoute
  '/_app/(main)/teams/$teamId/projects/': typeof AppmainTeamsTeamIdProjectsIndexRoute
  '/_app/(main)/teams/$teamId/projects/$projectId/': typeof AppmainTeamsTeamIdProjectsProjectIdIndexRoute
  '/_app/(main)/teams/$teamId/projects/$projectId/issues/new': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesNewRoute
  '/_app/(main)/teams/$teamId/projects/$projectId/issues/': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIndexRoute
  '/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/': typeof AppmainTeamsTeamIdProjectsProjectIdIssuesIssueIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/about'
    | '/profile'
    | '/settings'
    | '/teams'
    | '/teams/$teamId'
    | '/teams/$teamId/projects'
    | '/teams/$teamId/projects/$projectId'
    | '/teams/$teamId/projects/$projectId/issues/new'
    | '/teams/$teamId/projects/$projectId/issues'
    | '/teams/$teamId/projects/$projectId/issues/$issueId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/profile'
    | '/settings'
    | '/'
    | '/teams'
    | '/teams/$teamId'
    | '/teams/$teamId/projects'
    | '/teams/$teamId/projects/$projectId'
    | '/teams/$teamId/projects/$projectId/issues/new'
    | '/teams/$teamId/projects/$projectId/issues'
    | '/teams/$teamId/projects/$projectId/issues/$issueId'
  id:
    | '__root__'
    | '/_app'
    | '/_app/(main)'
    | '/_app/about'
    | '/_app/(main)/profile'
    | '/_app/(main)/settings'
    | '/_app/(main)/'
    | '/_app/(main)/teams/'
    | '/_app/(main)/teams/$teamId/'
    | '/_app/(main)/teams/$teamId/projects/'
    | '/_app/(main)/teams/$teamId/projects/$projectId/'
    | '/_app/(main)/teams/$teamId/projects/$projectId/issues/new'
    | '/_app/(main)/teams/$teamId/projects/$projectId/issues/'
    | '/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/(main)",
        "/_app/about"
      ]
    },
    "/_app/(main)": {
      "filePath": "_app/(main)/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/(main)/profile",
        "/_app/(main)/settings",
        "/_app/(main)/",
        "/_app/(main)/teams/",
        "/_app/(main)/teams/$teamId/",
        "/_app/(main)/teams/$teamId/projects/",
        "/_app/(main)/teams/$teamId/projects/$projectId/",
        "/_app/(main)/teams/$teamId/projects/$projectId/issues/new",
        "/_app/(main)/teams/$teamId/projects/$projectId/issues/",
        "/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/"
      ]
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/(main)/profile": {
      "filePath": "_app/(main)/profile.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/settings": {
      "filePath": "_app/(main)/settings.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/": {
      "filePath": "_app/(main)/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/": {
      "filePath": "_app/(main)/teams/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/": {
      "filePath": "_app/(main)/teams/$teamId/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/projects/": {
      "filePath": "_app/(main)/teams/$teamId/projects/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/projects/$projectId/": {
      "filePath": "_app/(main)/teams/$teamId/projects/$projectId/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/projects/$projectId/issues/new": {
      "filePath": "_app/(main)/teams/$teamId/projects/$projectId/issues/new.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/projects/$projectId/issues/": {
      "filePath": "_app/(main)/teams/$teamId/projects/$projectId/issues/index.tsx",
      "parent": "/_app/(main)"
    },
    "/_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/": {
      "filePath": "_app/(main)/teams/$teamId/projects/$projectId/issues/$issueId/index.tsx",
      "parent": "/_app/(main)"
    }
  }
}
ROUTE_MANIFEST_END */
